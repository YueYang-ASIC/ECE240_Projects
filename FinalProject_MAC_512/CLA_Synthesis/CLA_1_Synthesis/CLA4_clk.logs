
                           Design Compiler Graphical 
                                 DC Ultra (TM)
                                  DFTMAX (TM)
                              Power Compiler (TM)
                                 DesignWare (R)
                                 DC Expert (TM)
                               Design Vision (TM)
                               HDL Compiler (TM)
                               VHDL Compiler (TM)
                                  DFT Compiler
                               Design Compiler(R)

              Version S-2021.06-SP5-1 for linux64 - Mar 10, 2022 

                    Copyright (c) 1988 - 2022 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
   or distribution of this software is strictly prohibited.  Licensed Products
     communicate with Synopsys servers for the purpose of providing software
    updates, detecting software piracy and verifying that customers are using
    Licensed Products in conformity with the applicable License Key for such
  Licensed Products. Synopsys will use information gathered in connection with
    this process to deliver software updates and pursue software pirates and
                                   infringers.

 Inclusivity & Diversity - Visit SolvNetPlus to read the "Synopsys Statement on
            Inclusivity and Diversity" (Refer to article 000036315 at
                        https://solvnetplus.synopsys.com)
Initializing...
# dc-CLA4_clk.tcl script 
#
# 2018/02/15  Added *_ANALYZE_SECTION comments to new Makefile can automatically
#             add .v files to dc-*.tcl. Also updated some comments.
# 2017/02/14  Reduced output_delay to 4% and input_delay to 3% of the clock 
#             cycle time so very short critical paths are visible in timing 
#             reports. Also changed clock_skew from 250ps to 5% of cycle time 
#             so it will scale with clock frequency.
# 2017/02/10  Uncommented "analyze -format verilog ./proc.v" line. It seems to
#             be needed only the first time synthesis is run.
# 2017/02/04  Changes for NanGate 45 nm library including new timing parameters
# 2012/02/22  Changed:
#               ungroup -all -flatten -simple_names
#             to:
#               if { [sizeof_collection [get_cells * -filter 
#                  "is_hierarchical==true"]] > 0 } {
#                  ungroup -all -flatten -simple_names
#                  }
# 2010/02/16  Updated commented path to vtvtlib25.db
# 2009/02/12  Many parts re-written in new tcl version by Zhibin Xiao
# 2006/01/30  Updated /afs/.../vtvtlib25.db path to this quarter's path.
# 2004/02/05  Updated /afs/.../vtvtlib25.db path to this quarter's path.
# 2003/05/22  Increased input_setup from 500 to 6000 (external input delay
#             now 6ns instead of 9.5ns) so input paths don't show up at the
#             top of timing reports so often.
# 2003/05/15  Cleaned up a little
# 2003/05/14  Written
#
# Debugging
# list -designs
# list -libraries
# list -files 
#
# Add if you like:
# Annotates inputs, but doesn't propagate through design to clear warnings.
#   set_switching_activity -toggle_rate 0.25 -clock "clk" { "in31a" }
# More power info
#   report_power -net
#   report_power -hier
#   set_max_delay
#   write -format db -output CLA4_clk.db
#
# Doesn't work quite the way I expect
#   NameDesign = CLA4_clk    Set variable ok, but how to concatenate?
#   write_rtl -format verilog -output CLA4_clk.vg
#===== Set: make sure you change design name elsewhere in this file
set NameDesign "CLA4_clk"
CLA4_clk
#===== Set some timing parameters
set CLK "clk"
clk
#===== All values are in units of ns for NanGate 45 nm library
set clk_period      0.17
0.17
set clock_skew      [expr {$clk_period} * 0.05 ]
0.0085
set input_setup     [expr {$clk_period} * 0.97 ]
0.1649
set output_delay    [expr {$clk_period} * 0.04 ]
0.0068
set input_delay     [expr {$clk_period} - {$input_setup}]
0.0051
# It appears one "analyze" command is needed for each .v file. This works best
# (only?) with one command line per module.
analyze -format verilog CLA4_clk.v
Running PRESTO HDLC
Compiling source file ./CLA4_clk.v
Presto compilation completed successfully.
Loading db file '/synopsys/Nangate_FreePDK45/NangateOpenCellLibrary_PDKv1_3_v2010_12/Front_End/Liberty/CCS/NangateOpenCellLibrary.db'
Information: Using CCS timing libraries. (TIM-024)
Loading db file '/synopsys/Design_Compiler/libraries/syn/dw_foundation.sldb'
1
analyze -format verilog CLA_generator4.v
Running PRESTO HDLC
Compiling source file ./CLA_generator4.v
Presto compilation completed successfully.
1
analyze -format verilog CLA4.v
Running PRESTO HDLC
Compiling source file ./CLA4.v
Presto compilation completed successfully.
1
analyze -format verilog GPFA.v
Running PRESTO HDLC
Compiling source file ./GPFA.v
Presto compilation completed successfully.
1
elaborate $NameDesign
Loading db file '/usr/synopsys/syn/S-2021.06-SP5-1/libraries/syn/gtech.db'
Loading db file '/usr/synopsys/syn/S-2021.06-SP5-1/libraries/syn/standard.sldb'
  Loading link library 'NangateOpenCellLibrary'
  Loading link library 'gtech'
Running PRESTO HDLC

Inferred memory devices in process
	in routine CLA4_clk line 22 in file
		'./CLA4_clk.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      B_reg_reg      | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
|      A_reg_reg      | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
	in routine CLA4_clk line 35 in file
		'./CLA4_clk.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|     res_reg_reg     | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (CLA4_clk)
Elaborated 1 design.
Current design is now 'CLA4_clk'.
Information: Building the design 'CLA4'. (HDL-193)
Presto compilation completed successfully. (CLA4)
Information: Building the design 'GPFA'. (HDL-193)
Presto compilation completed successfully. (GPFA)
Information: Building the design 'CLA_generator4'. (HDL-193)
Presto compilation completed successfully. (CLA_generator4)
1
current_design $NameDesign
Current design is 'CLA4_clk'.
{CLA4_clk}
link

  Linking design 'CLA4_clk'
  Using the following designs and libraries:
  --------------------------------------------------------------------------
  NangateOpenCellLibrary (library) /synopsys/Nangate_FreePDK45/NangateOpenCellLibrary_PDKv1_3_v2010_12/Front_End/Liberty/CCS/NangateOpenCellLibrary.db
  dw_foundation.sldb (library) /synopsys/Design_Compiler/libraries/syn/dw_foundation.sldb

1
uniquify
1
if { [sizeof_collection [get_cells * -filter "is_hierarchical==true"]] > 0 } {
   ungroup -all -flatten -simple_names
   }
Information: Updating graph... (UID-83)
1
set_max_area 0.0
1
#===== Timing and input/output load constraints
create_clock $CLK -name $CLK -period $clk_period -waveform [list 0.0 [expr {$clk_period} / 2.0 ] ] 
1
set_clock_uncertainty $clock_skew $CLK
1
#set_clock_skew -plus_uncertainty $clock_skew $CLK
#set_clock_skew -minus_uncertainty $clock_skew $CLK
set_input_delay     $input_delay  -clock $CLK [all_inputs]
1
#remove_input_delay               -clock $CLK [all_inputs] 
set_output_delay    $output_delay -clock $CLK [all_outputs]
1
set_load 1.5 [all_outputs]
1
compile -map_effort medium
Warning: Setting attribute 'fix_multiple_port_nets' on design 'CLA4_clk'. (UIO-59)
Information: Checking out the license 'DesignWare'. (SEC-104)
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library  |         Version         | Available |
============================================================================
| Basic DW Building Blocks           | S-2021.06-DWBB_202106.5 |     *     |
| Licensed DW Building Blocks        | S-2021.06-DWBB_202106.5 |     *     |
============================================================================

============================================================================
| Flow Information                                                         |
----------------------------------------------------------------------------
| Flow         | Design Compiler                                           |
============================================================================
| Design Information                                      | Value          |
============================================================================
| Number of Scenarios                                     | 0              |
| Leaf Cell Count                                         | 37             |
| Number of User Hierarchies                              | 0              |
| Sequential Cell Count                                   | 3              |
| Macro Count                                             | 0              |
| Number of Power Domains                                 | 0              |
| Design with UPF Data                                    | false          |
============================================================================

Information: There are 32 potential problems in your design. Please run 'check_design' for more information. (LINT-99)



  Beginning Pass 1 Mapping
  ------------------------
  Processing 'CLA4_clk'

  Updating timing information
Information: Updating design information... (UID-85)

  Beginning Implementation Selection
  ----------------------------------
  Mapping 'DW_mult_uns'
Information: Added key list 'DesignWare' to design 'dp_cluster_0_1'. (DDB-72)
Information: Added key list 'DesignWare' to design 'CLA4_clk'. (DDB-72)

  Beginning Mapping Optimizations  (Medium effort)
  -------------------------------

                                  TOTAL                                      
   ELAPSED            WORST NEG   SETUP    DESIGN                            
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:00      25.8      0.00       0.0       0.0                          
    0:00:00      25.8      0.00       0.0       0.0                          
    0:00:00      25.8      0.00       0.0       0.0                          
    0:00:00      25.8      0.00       0.0       0.0                          
    0:00:00      25.8      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          



  Beginning Delay Optimization Phase
  ----------------------------------

                                  TOTAL                                      
   ELAPSED            WORST NEG   SETUP    DESIGN                            
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      24.2      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          


  Beginning Area-Recovery Phase  (max_area 0)
  -----------------------------

                                  TOTAL                                      
   ELAPSED            WORST NEG   SETUP    DESIGN                            
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          
    0:00:00      23.1      0.00       0.0       0.0                          


Note: Symbol # after min delay cost means estimated hold TNS across all active scenarios 


  Optimization Complete
  ---------------------
1
# Comment "ungroup" line to maybe see some submodules
if { [sizeof_collection [get_cells * -filter "is_hierarchical==true"]] > 0 } {
   ungroup -all -flatten -simple_names
   }
# compile -map_effort medium    # May help, or maybe not
#===== Reports
write -format verilog -output CLA4_clk.vg -hierarchy $NameDesign
Writing verilog file '/home/c11879_csufresno/Documents/ECE240_Git/ECE240_Projects/FinalProject_MAC_512/CLA_Synthesis/CLA_1_Synthesis/CLA4_clk.vg'.
1
write_sdc	CLA4_clk.sdc
1
report_area               > CLA4_clk.area
report_power              > CLA4_clk.pow
report_timing -nworst 10  > CLA4_clk.tim
check_timing

Information: Checking generated_clocks...

Information: Checking loops...

Information: Checking no_input_delay...

Information: Checking unconstrained_endpoints...

Information: Checking pulse_clock_cell_type...

Information: Checking no_driving_cell...

Information: Checking partial_input_delay...
1
check_design
1
exit

Memory usage for this session 139 Mbytes.
Memory usage for this session including child processes 139 Mbytes.
CPU usage for this session 3 seconds ( 0.00 hours ).
Elapsed time for this session 5 seconds ( 0.00 hours ).

Thank you...
